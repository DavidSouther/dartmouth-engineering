md-content.md-padding
  md-toolbar.md-whiteframe-z1
    md-content(
      layout="row",
      layout-align="space-around"
    )
      md-input-container(
        flex="50"
      )
        label.md-no-float
          | Length:&nbsp;{{ simulation.length | number:1 }}&nbsp;m
        md-slider(
          aria-label="Set beam length."
          ng-model="simulation.length",
          min="0",
          max="10",
          step=".1"
        )
      md-input-container(
        flex="30"
      )
        div(layout="row")
          label.md-no-float
            | Load:&nbsp;{{simulation.load.applied}}&nbsp;{{ simulation.load.loading == 'point' ? 'kN' : 'kN/m'}}
        md-slider(
          aria-label="Set beam loading."
          ng-model="simulation.load.applied",
          min="50",
          max="100",
          step="1"
        )
      md-input-container(
        flex="20"
      )
        label.md-no-float Loading
        md-select(
          placeholder="Loading"
          ng-model="simulation.load.loading"
        )
          md-option( ng-value="'point'" ) Concentrated
          md-option( ng-value="'even'" ) Distributed

    md-content(layout="row", layout-align="space-around")
      md-input-container(
        flex="50"
      )
        label.md-no-float
          | Support:&nbsp;{{ simulation.support | number:1 }}&nbsp;m
        md-slider(
          aria-label="Set beam support point."
          ng-model="simulation.support",
          min="0",
          max="10",
          step=".1"
        )
      div(flex)
        md-input-container(
          ng-hide="simulation.load.loading == 'even'"
        )
          label.md-no-float
            | Load&nbsp;Point&nbsp;{{ simulation.load.point | number:1}}m
          md-slider(
            aria-label="Set load point distance.",
            ng-model="simulation.load.point",
            min="0.1",
            max="10",
            step=".1"
          )
  md-card(
    layout="column",
    layout-align="space-around"
    graph-scales="{\
      xa: ['linear', -3, 13, 0, 400], \
      yb: ['linear', -1, .5, 0, 60], \
      yse: ['linear', -10000, 10000, 0, 100], \
      yme: ['linear', 12500, -12500, 0, 100], \
      ysp: ['linear', 160, -160, 0, 100], \
      ymp: ['linear', 400, -400, 0, 100], \
      applied: ['log', 10, 100, 10, 20], \
    }"
  )
    table
      tr
        td(width="25%")
        td(width="50%")
          svg(
            height="60px"
            width="400px"
          )
            path(
              stroke="black"
              fill="none"
              ng-attr-d="\
                M{{$scales.xa(0)}},{{$scales.yb(0)}} \
                L{{$scales.xa(simulation.length)}},{{$scales.yb(0)}} \
                L{{$scales.xa(simulation.length)}},{{$scales.yb(0) - 10}} \
                L{{$scales.xa(0)}},{{$scales.yb(0) - 10}} \
                Z \
              "
            )
            g
              arrow(
                ng-if="simulation.load.loading == 'point'"
                color="'blue'"
                rotation="90"
                length="$scales.applied(simulation.load.applied)"
                tip="[$scales.xa(simulation.load.point), $scales.yb(0) - 10]"
              )
              g(
                ng-if="simulation.load.loading == 'even'"
              )
                path(
                  stroke="blue"
                  fill="none"
                  ng-attr-d="\
                    M{{$scales.xa(0)}},{{$scales.yb(0) - (10 + $scales.applied(simulation.load.applied))}}\
                    L{{$scales.xa(simulation.length)}},{{$scales.yb(0) - (10 + $scales.applied(simulation.load.applied))}}\
                  "
                )
                arrow(
                  ng-repeat="a in forall(simulation.length)"
                  color="'blue'"
                  rotation="90"
                  length="$scales.applied(simulation.load.applied)"
                  tip="[$scales.xa(simulation.length * ($index / Math.ceil(simulation.length))), $scales.yb(0) - 10]"
                )
            g
              g(
                ng-if="simulation.support > 0"
              )
                circle(
                  stroke="green"
                  fill="none"
                  radius="5"
                  center="[\
                    $scales.xa(simulation.support) + 1, \
                    $scales.yb(0) + 6 \
                  ]"
                )
                path(
                  fill="none"
                  stroke="green"
                  ng-attr-d="\
                    M{{ $scales.xa(0)}}, {{ $scales.yb(0) }}\
                    l5,10 h-10 z \
                  "
                )
              g(
                ng-if="simulation.support == 0"
              )
                path(
                  fill="none"
                  stroke="green"
                  stroke-width="2px"
                  ng-attr-d="\
                    M{{$scales.xa(0)}}, {{ $scales.yb(0) - 15}},\
                    v30 m0,-5, l-10,5 m10,-5 m0,-10, l-10,5 m10,-5, m0,-10, l-10,5\
                  "
                )
        td
      tr
        td.md-padding(
          valign="top"
        )
          b Shear
          br
          | Vmax: {{ MaxV() | number:0 }} kN
        td
          svg(
            ng-if="simulation.load.loading == 'even'"
            height="100px"
            width="400px"
            graph-tick="vs = Vs()"
          )
            path(
              ng-if="simulation.support > 0"
              stroke="black"
              fill="green"
              ng-attr-d="\
                M{{$scales.xa(0)}},{{$scales.yse(0)}} \
                L{{$scales.xa(0)}},{{$scales.yse(0 - V(1))}} \
                L{{$scales.xa(simulation.support)}},{{$scales.yse(0 + V(3))}} \
                L{{$scales.xa(simulation.support)}},{{$scales.yse(0 - V(2))}} \
                L{{$scales.xa(simulation.length)}},{{$scales.yse(0)}} \
                z \
              "
            )
            path(
              ng-if="simulation.support == 0"
              stroke="black"
              fill="green"
              ng-attr-d="\
                M{{$scales.xa(0)}},{{$scales.yse(0)}} \
                L{{$scales.xa(0)}},{{$scales.yse(0 - V(1))}} \
                L{{$scales.xa(simulation.length)}},{{$scales.yse(0)}} \
                z \
              "
            )
          svg(
            ng-if="simulation.load.loading == 'point'"
            height="100px"
            width="400px"
          )
            path(
              stroke="black"
              fill="green"
              ng-attr-d="\
                M{{ $scales.xa(0) }} {{ $scales.ysp(0)}}\
                L{{ $scales.xa(0) }} {{ $scales.ysp(V(1))}}\
                L{{ $scales.xa(Math.min(simulation.load.point, simulation.support))}} {{ $scales.ysp(V(1))}}\
                L{{ $scales.xa(Math.min(simulation.load.point, simulation.support))}} {{ $scales.ysp(V(2))}}\
                L{{ $scales.xa(Math.max(simulation.load.point, simulation.support)) }} {{ $scales.ysp(V(2)) }} \
                L{{ $scales.xa(Math.max(simulation.load.point, simulation.support)) }} {{ $scales.ysp(0) }} \
                z\
              "
            )
      tr
        td.md-padding(
          valign="top"
        )
          b Moment
          br
          | Mmax: {{ MaxM() | number:0 }} kNm
        td
          svg(
            ng-if="simulation.load.loading == 'even'"
            height="260px"
            width="400px"
          )
            path(
              stroke="black"
              fill="orange"
              ng-attr-d="{{moment($scales)}}"
            )
          svg(
            ng-if="simulation.load.loading == 'point'"
            height="100px"
            width="400px"
          )
            path(
              stroke="black"
              fill="orange"
              ng-attr-d="\
                M{{ $scales.xa(0) }} {{$scales.ymp(0)}} \
                L{{ $scales.xa( Math.min(simulation.load.point, simulation.support) )}} {{$scales.ymp(pointMoment())}} \
                L{{ $scales.xa( Math.max(simulation.load.point, simulation.support) )}} {{ $scales.ymp(0) }} \
                z \
              "
            )
