md-content
  md-toolbar.md-whiteframe-z1.toolbar
    section(
      layout="row",
      layout-align="space-around"
    )
      md-content.md-padding(
        flex="33"
      )
        md-input-container
          label.md-no-float Truss Form
          md-select(
            placeholder="Form"
            ng-model="simulation.form"
          )
            md-option(
              ng-repeat="form in forms"
              ng-value="form"
            ) {{ form }}
      md-content.md-padding(
        flex="33"
      )
        md-input-container
          label.md-no-float Applied Load
          md-select(
            placeholder="Applied load"
            ng-model="simulation.load"
          )
            md-option(
              ng-repeat="load in [120, 240, 480]"
              ng-value="load"
            ) {{ load }} kN
      md-content.md-padding(
        flex="33"
      )
        md-input-container
          label.md-no-float Load Distribution
          md-select(
            placeholder="Loading"
            ng-model="simulation.loading"
          )
            md-option(
              ng-repeat="load in loading"
              ng-value="load"
            ) {{ load }}
    section(layout="row", layout-align="space-around")
      md-content.md-padding(
        flex
        layout="column",
        layout-align="left center",
      )
        md-input-container
          label.md-no-float Truss&nbsp;Span:&nbsp;{{ simulation.span | number:1}}m
          md-slider(
            aria-label="Truss span, in meters."
            ng-model="simulation.span",
            min="5",
            max="100",
            step="1"
          )
      md-content.md-padding(
        flex
        layout="column",
        layout-align="left center",
      )
        md-input-container
          label.md-no-float Truss&nbsp;Height:&nbsp;{{ simulation.height | number:1}}m
          md-slider(
            aria-label="Control truss height, in meters."
            ng-model="simulation.height",
            min="2",
            max="10",
            step=".25"
          )
  div(
    layout="row",
    layout-align="space-around"
  )
    div(
      flex="15"
      layout="column"
    )
      md-content.md-padding
        div(
          layout="row"
          ng-repeat="(connection, beam) in truss().beams"
        )
          div(flex="33")
            b {{ connection }}
          div(
            flex="66"
            style="text-align: right"
          )
            span(
              style="\
                color: hsl({{beam.load > 0 ? 200 : 0}}, {{$scales.saturation(Math.abs(beam.load))}}%, 50%); \
              "
            ) {{ beam.load | number:0 }}
            | &nbsp;kN
    div(flex, layout="row", layout-align="center center")
      svg(
        height="200px"
        width="600px"
        graph-scales="{\
          x: ['linear', -50, 50], \
          y: ['linear', 30, -3], \
          saturation: ['log', ex.load.min, ex.load.max, 35, 100], \
          stroke: ['log', ex.load.min, ex.load.max, 1, 8], \
        }"
      )
        g
          line(
            ng-repeat="(connection, beam) in truss().beams"
            from="$scales(beam.from)"
            to="$scales(beam.to)"
            style=" \
              stroke: hsl({{beam.load > 0 ? 200 : 0}}, {{$scales.saturation(Math.abs(beam.load))}}%, 50%); \
              stroke-width: {{$scales.stroke(Math.abs(beam.load))}}px; \
            "
          )
          text(
            ng-repeat="(label, point) in truss().points | filter:point[1]:0"
            at="$scales(point)"
            text-anchor="middle"
            ng-attr-alignment-baseline="{{ point[1] == 0 ? 'hanging' : 'baseline'}}"
          ) {{ label }}
        g(
          ng-if="simulation.loading === 'Center'"
        )
          arrow(
            color="'hsl(135, 25%, 50%)'"
            rotation="90"
            tip="[$scales.x(0), $scales.y(0) + (simulation.load / 12)]"
            length="simulation.load / 12"
          )
